
<h2 style="text-align:center">Despesas pessoais</h2>
<hr /> <br />
<div style="display: flex; justify-content: space-between;">
    <div id="container" style="width: 48%; height: 400px;"></div>
    <div id="container2" style="width: 48%; height: 400px;"></div>
</div>

<script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    $(document).ready(function () {
        var titleMessage = "Gastos mensais: ";
        $.ajax({
            type: "GET",
            url: "/Expense/GetExpensePierPeriodMonthly",
            contentType: "application/json",
            dataType: "json",
            success: function (result) {
                var keys = Object.keys(result);
                var dateMonthly = new Array();
                var totalSpend = 0.0;
                for (var i = 0; i < keys.length; i++) {
                    var arrL = new Array();
                    arrL.push(keys[i]);
                    arrL.push(result[keys[i]]);
                    totalSpend += result[keys[i]];
                    dateMonthly.push(arrL);
                }
                createColumnChart(dateMonthly, titleMessage, totalSpend.toFixed(2), 'container');
            }
        });

        var titleMessage2 = "Gastos por categoria: ";
        $.ajax({
            type: "GET",
            url: "/Expense/GetExpensePierCategory",
            contentType: "application/json",
            dataType: "json",
            success: function (result) {
                var keys = Object.keys(result);
                var dateMonthly = new Array();
                var totalSpend = 0.0;
                for (var i = 0; i < keys.length; i++) {
                    var arrL = new Array();
                    arrL.push(keys[i]);
                    arrL.push(result[keys[i]]);
                    totalSpend += result[keys[i]];
                    dateMonthly.push(arrL);
                }
                createPieChart(dateMonthly, titleMessage2, totalSpend.toFixed(2), 'container2');
            }
        });
    });

    function createColumnChart(sum, titleText, totalSpend, containerId) {
        Highcharts.chart(containerId, {
            chart: {
                type: 'column'
            },
            title: {
                text: titleText + '' + totalSpend
            },
            xAxis: {
                type: 'category',
                labels: {
                    style: {
                        fontSize: '10px',
                        fontFamily: 'Verdana, sans-serif'
                    }
                }
            },
            yAxis: {
                min: 0,
                title: {
                    text: 'Expense value'
                }
            },
            legend: {
                enabled: false
            },
            tooltip: {
                pointFormat: 'Total expense: <b>{point.y:.2f} </b>'
            },
            series: [{
                type: 'column',
                data: sum,
            }]
        });
    }
    function createPieChart(sum, titleText, totalSpend, containerId) {
        Highcharts.chart(containerId, {
            chart: {
                type: 'pie'
            },
            title: {
                text: titleText + '' + totalSpend
            },
            tooltip: {
                valueSuffix: '%'
            },
            accessibility: {
                point: {
                    valueSuffix: '%'
                }
            },
            plotOptions: {
                series: {
                    allowPointSelect: true,
                    cursor: 'pointer',
                    dataLabels: [{
                        enabled: true,
                        distance: 20
                    }, {
                        enabled: true,
                        distance: -40,
                        format: '{point.percentage:.1f}%',
                        style: {
                            fontSize: '1.2em',
                            textOutline: 'none',
                            opacity: 0.7
                        },
                        filter: {
                            operator: '>',
                            property: 'percentage',
                            value: 10
                        }
                    }]
                }
            },
            series: [{
                name: 'Expenses',
                colorByPoint: true,
                data: sum.map(item => ({ name: item[0], y: item[1] }))
            }]
        });
    }
</script>
